{"version":3,"sources":["assets\\Script\\BaseButtle.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;AAE5E,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAwC,8BAAY;IADpD;QAAA,qEAsCC;QAnCC,YAAM,GAAY,IAAI,CAAC;QAEvB,aAAO,GAAW,EAAE,CAAC;QAErB,iBAAW,GAAW,GAAG,CAAC;QAE1B,UAAI,GAAG,IAAI,CAAC;;IA6Bd,CAAC;IA3BC,wBAAwB;IAExB,2BAAM,GAAN;QACE,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IACvD,CAAC;IAED,0BAAK,GAAL,cAAS,CAAC;IAEV,yBAAI,GAAJ,UAAK,IAAI;QACP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,sCAAiB,GAAjB;QACE,qBAAqB;QACrB,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QACjD,iBAAiB;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;QACnD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,6BAAQ,GAAR;QACE,kCAAkC;QAClC,4BAA4B;QAC5B,aAAa;QACb,uBAAuB;QACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAlCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACK;IAFJ,UAAU;QAD9B,OAAO;OACa,UAAU,CAqC9B;IAAD,iBAAC;CArCD,AAqCC,CArCuC,EAAE,CAAC,SAAS,GAqCnD;kBArCoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseButtle extends cc.Component {\r\n  @property(cc.Node)\r\n  buttle: cc.Node = null;\r\n\r\n  collied: number = 10;\r\n\r\n  bulletSpeed: number = 300;\r\n\r\n  game = null;\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    this.bulletSpeed = (Math.random() - 0.5) * 300 + 100;\r\n  }\r\n\r\n  start() {}\r\n\r\n  init(game) {\r\n    this.game = game;\r\n  }\r\n\r\n  getPlayerDistance() {\r\n    // 根据 player 节点位置判断距离\r\n    var playerPos = this.game.airPlane.getPosition();\r\n    // 根据两点位置计算两点之间距离\r\n    var dist = this.node.position.sub(playerPos).mag();\r\n    return dist;\r\n  }\r\n\r\n  onPicked() {\r\n    // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n    // this.game.spawnNewStar();\r\n    // 然后销毁当前星星节点\r\n    // this.node.destroy();\r\n    this.game.gameOver();\r\n  }\r\n}\r\n"]}